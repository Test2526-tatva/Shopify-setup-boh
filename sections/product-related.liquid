<div
  data-url='{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related'
  class='product-more product-recommended'
>
  <div class='product-more__header'>
    <h1 class='product-more__title'>You may also like</h1>

    <div class='product-more__arrows md-hide'>
      <div class='product-more__arrow product-more__arrow--prev'>
        {% render 'icon-swiper-prev' %}
      </div>
      <div class='product-more__arrow product-more__arrow--next'>
        {% render 'icon-swiper-next' %}
      </div>
    </div>
  </div>

  <div class='product-more__slider product-recommended__content'>
    <div class='swiper'>
      <div class='swiper-wrapper'>
        {%- for product in recommendations.products -%}
          <div class='swiper-slide'>
            {% render 'product-card', product: product %}
          </div>
        {% endfor %}
      </div>
    </div>

    <div class='product-more__arrows md-show-flex'>
      <div class='product-more__arrow product-more__arrow--prev'>
        {% render 'icon-swiper-prev' %}
      </div>
      <div class='product-more__arrow product-more__arrow--next'>
        {% render 'icon-swiper-next' %}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {});
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const productRecommendedContainer = document.querySelector('.product-recommended');

    const initSwiper = () => {
      const swiper = new Swiper('.product-more__slider .swiper', {
        slidesPerView: 2,
        spaceBetween: 24,
        breakpoints: {
          1024: {
            slidesPerView: 5,
            spaceBetween: 24,
          },
        },
        navigation: {
          nextEl: '.product-more__arrow--next',
          prevEl: '.product-more__arrow--prev',
        },
      });
    };

    if (productRecommendedContainer) {
      const url = productRecommendedContainer.dataset.url;

      fetch(url)
        .then((response) => response.text())
        .then((text) => {
          const html = document.createElement('div');
          html.innerHTML = text;
          const products = html.querySelector('.product-recommended__content');

          if (products && products.innerHTML.trim().length) {
            productRecommendedContainer.querySelector('.product-recommended__content').innerHTML = products.innerHTML;
            productRecommendedContainer.style.display = 'block';
            initSwiper();
          } else {
            productRecommendedContainer.style.display = 'none';
          }
        })
        .catch((e) => {
          console.error('Error fetching complementary products:', e);
          productRecommendedContainer.style.display = 'none';
        });
    }
  });
</script>
